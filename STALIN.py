from kandinsky import *
import ion
import random
import time
w,h=106,150
colors=[(215, 191, 151), (178, 153, 127), (195, 130, 84), (134, 131, 123), (206, 96, 31), (175, 101, 64), (97, 94, 86), (196, 44, 28), (195, 34, 26), (194, 32, 25), (110, 62, 50), (59, 56, 54)]
data=''









def draw_flag(points):
    fill_rect(0,0,320,100,(213, 0, 0))

    draw_string(f'You got {points} points in 90 seconds',0,100)
    w, h = 150, 100
    colors = [(233, 99, 3), (217, 0, 0), (215, 0, 0), (213, 0, 0)]
    dominant_color = (215, 0, 0)
    dominant = 2
    rle_data = 'x1093,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,x84,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,x84,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,x84,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,x84,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,x116,3,x149,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,x133,3,1,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,x132,1,3,0,0,1,3,x1,3,3,3,3,3,3,3,3,3,3,3,x132,1,3,0,0,0,3,x1,3,3,3,3,3,3,3,3,3,3,3,x132,3,1,0,0,0,3,x1,3,3,3,3,3,3,3,3,3,3,3,x131,1,3,0,0,0,0,1,3,x1,3,3,3,3,3,3,3,3,3,3,x132,3,0,0,1,0,0,3,x1,3,3,3,3,3,3,3,3,3,3,x123,1,1,1,1,1,1,1,1,x1,1,0,0,3,0,0,3,x10,3,x122,3,3,3,3,3,3,3,3,3,3,0,0,1,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,x122,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1,0,0,0,0,0,0,0,0,0,0,0,1,3,x122,1,0,0,0,0,0,0,0,0,0,0,0,3,x1,1,0,0,0,0,0,0,0,0,0,0,0,x124,3,3,0,0,0,0,3,x1,1,1,1,3,3,3,3,1,1,1,1,x1,1,0,0,0,1,3,3,3,x124,3,1,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,1,0,0,0,3,3,x1,3,3,x124,1,3,3,0,0,0,0,3,x1,3,3,3,3,x2,3,0,0,0,1,3,x2,3,3,3,x127,3,1,0,0,0,3,x1,3,3,3,x1,3,0,0,0,1,3,x1,3,3,3,3,3,x127,1,3,1,0,0,3,x5,3,0,0,3,3,x1,3,3,3,3,3,3,x128,3,0,0,0,3,x1,3,3,3,1,3,0,0,1,3,x1,3,3,3,3,3,3,x127,1,3,0,0,1,x1,3,1,0,1,3,x1,1,0,0,3,x1,3,3,3,3,3,3,3,x115,1,3,3,x9,3,0,0,3,3,0,0,0,0,1,3,3,0,0,3,x1,3,3,3,3,3,x1,1,3,3,x113,3,1,0,1,x7,3,1,0,0,3,0,0,0,0,0,0,0,3,0,0,1,3,x1,3,3,3,x1,3,0,0,0,3,3,1,x108,3,1,0,0,0,3,x6,1,3,0,0,0,0,0,0,3,3,x1,0,0,0,0,0,0,3,x1,3,3,3,3,x1,3,0,0,0,1,3,3,x105,3,x1,1,0,0,0,3,1,x7,3,0,0,0,0,1,3,x2,3,3,0,0,0,0,0,3,x1,3,3,3,3,3,1,3,0,0,0,1,1,3,x103,3,0,0,0,0,0,3,1,x7,3,1,0,0,0,x1,3,x1,3,3,x2,3,1,0,0,0,1,3,x1,3,3,3,3,x3,0,0,0,0,0,x102,3,0,0,0,0,0,1,x8,1,3,0,0,0,3,3,x1,3,3,x2,3,x1,3,3,0,0,0,3,x1,3,3,3,3,x3,1,0,0,0,0,0,3,1,x97,1,3,0,0,1,0,0,1,0,x10,0,1,3,x2,3,3,3,3,3,x4,3,1,0,3,x1,3,3,3,3,x2,1,0,1,0,0,0,0,0,3,1,x96,3,1,0,0,0,0,1,0,0,3,1,x8,3,3,1,x3,3,1,1,1,3,3,x2,1,3,3,x7,1,3,0,0,1,0,0,0,0,1,x96,3,1,0,0,0,0,0,0,0,x19,0,0,0,1,3,3,1,x12,0,0,0,1,0,0,0,0,3,x94,1,0,0,0,0,1,0,0,1,3,x18,3,1,0,0,0,1,3,x11,3,1,0,0,0,0,0,1,0,1,x92,1,3,0,0,0,0,0,0,0,0,3,1,x13,1,1,x3,1,3,3,0,0,0,0,3,3,1,x8,1,3,1,0,0,0,0,1,0,0,3,1,x90,1,3,0,0,0,0,0,0,0,x16,3,3,3,x5,3,0,0,0,0,1,3,1,x9,1,0,0,0,0,1,0,0,3,1,x91,1,0,0,1,0,0,1,0,1,3,x14,0,0,1,1,3,x3,1,3,0,0,0,0,1,3,1,x7,3,1,0,1,0,0,1,0,0,x92,3,1,0,0,0,0,1,0,0,3,1,x12,3,0,0,0,0,0,0,3,x3,1,3,0,0,0,0,1,x8,1,3,0,0,1,0,0,0,0,1,x91,3,1,0,0,0,1,0,0,1,3,x12,3,0,0,0,0,0,0,1,x6,3,0,0,0,0,x10,1,0,0,0,1,0,0,1,x92,1,0,0,1,0,0,0,3,1,x11,3,0,0,0,0,0,0,1,3,x7,1,0,0,0,0,3,1,x6,1,3,0,0,0,0,0,0,1,1,x89,3,1,0,0,0,0,0,0,1,x12,3,0,0,0,0,0,0,1,x8,1,3,0,0,0,0,1,3,x9,0,0,0,0,0,0,0,3,x88,3,0,0,0,0,0,0,0,1,3,x10,3,0,0,0,0,0,0,0,1,3,1,x8,1,0,0,0,0,3,1,x6,3,0,1,0,0,0,0,0,0,3,1,x86,1,3,0,0,1,0,0,0,0,0,3,1,x7,1,3,0,0,0,0,0,0,0,0,0,1,3,1,x6,1,3,0,0,0,0,1,3,x5,1,3,0,0,1,0,0,3,0,0,3,1,x86,1,3,0,0,3,0,0,x1,0,0,3,x10,1,0,0,0,0,1,1,0,0,0,1,3,1,x5,1,3,0,0,0,0,0,3,1,x5,3,0,0,x1,0,0,1,0,0,3,1,x86,1,3,0,0,0,0,0,0,0,1,3,x10,3,1,0,0,1,x1,3,0,0,0,0,1,3,1,x4,1,3,0,0,0,0,0,3,1,x5,3,1,0,0,0,0,0,0,0,3,1,x87,3,1,0,0,1,1,0,0,1,3,x10,1,3,1,1,3,1,1,3,0,0,0,0,1,3,1,x3,1,3,0,0,0,0,0,3,1,x7,0,0,0,1,0,0,1,3,x88,3,1,0,0,1,0,0,0,3,1,x12,3,3,x3,1,3,0,0,0,0,1,3,1,x2,1,3,0,0,0,0,0,3,x6,1,3,0,0,0,0,0,0,x91,3,0,0,0,0,0,0,3,1,x18,1,3,0,0,0,0,1,3,1,x1,1,3,0,0,0,0,0,3,x7,1,0,0,0,0,0,0,x91,1,0,0,0,0,0,1,0,3,x20,3,0,0,0,0,0,3,1,1,3,0,0,0,0,0,3,x6,3,0,1,0,0,0,0,1,0,3,x88,3,0,1,0,0,0,0,1,0,3,x14,1,x5,1,3,0,0,0,0,0,3,x1,1,0,0,0,0,0,3,1,x5,3,0,1,0,0,0,0,1,0,3,1,x86,1,3,0,0,x1,0,0,0,1,0,1,x12,3,x1,3,x1,1,x4,1,3,0,0,0,0,0,3,0,0,0,0,0,0,3,x6,1,0,0,0,0,0,3,0,0,3,1,x87,3,1,0,0,1,0,0,0,0,1,x10,3,3,0,0,0,3,3,3,x1,1,x2,1,3,0,0,0,0,0,0,0,0,0,0,1,3,x6,1,0,0,0,0,3,0,0,1,3,x90,0,0,1,0,0,0,0,1,3,x7,1,x1,0,0,0,0,0,0,0,1,3,3,3,3,3,x1,3,0,0,0,0,0,0,0,0,0,3,1,x5,3,1,0,0,0,0,0,0,0,3,x89,1,3,0,0,0,0,1,0,0,0,x8,1,3,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,x6,3,1,0,0,0,3,0,0,0,1,3,x92,0,0,0,1,0,0,0,0,1,x6,3,1,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,1,x4,3,1,0,0,0,0,0,0,0,0,3,1,x91,3,1,0,0,0,0,0,0,0,0,3,1,x4,0,0,0,0,3,x2,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x1,3,x4,3,0,0,0,0,0,0,0,0,x95,1,1,0,0,0,0,0,1,0,1,3,x2,3,0,0,0,0,1,x4,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,x2,1,3,0,0,1,0,0,0,0,0,1,0,3,x92,3,1,0,3,0,0,0,0,1,0,0,3,1,3,0,0,0,0,0,3,1,x5,3,3,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,3,1,1,3,0,0,1,0,0,0,0,x1,0,1,3,x92,1,3,0,0,3,0,0,0,1,0,0,1,3,3,0,0,0,0,3,x7,1,x1,3,3,3,3,3,3,3,3,3,x2,0,0,0,0,3,1,3,1,0,0,1,0,0,1,1,0,0,3,1,x94,1,0,0,1,1,0,0,0,0,0,1,3,1,0,0,3,x11,1,1,x3,1,1,x2,3,1,0,0,3,x1,3,1,0,0,0,0,0,x1,0,0,0,x96,1,3,0,0,0,0,0,1,0,0,0,0,0,3,3,3,x23,3,3,x1,3,0,0,0,0,1,1,0,0,0,0,1,3,x96,1,3,0,0,0,0,0,1,0,0,1,0,0,3,1,x23,1,x1,3,0,0,1,0,0,0,0,0,0,0,1,3,1,x97,1,3,1,0,0,0,0,0,0,0,1,0,0,3,x25,0,0,0,0,0,0,0,0,0,0,1,3,1,x100,3,1,0,0,0,0,0,0,1,0,0,0,3,x1,1,x18,1,3,x1,0,0,0,0,0,0,0,0,0,1,0,1,x103,0,0,1,1,0,0,0,0,1,0,0,0,1,3,3,x3,1,1,1,1,x2,1,1,1,1,1,x2,3,3,1,0,0,0,1,0,0,0,1,1,0,0,0,3,x102,1,3,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,x104,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,1,x105,1,3,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,3,3,1,x109,3,0,1,1,1,3,3,3,0,0,0,0,0,0,1,0,0,0,1,x1,0,0,0,3,0,0,0,0,0,0,1,3,3,3,x1,0,0,x114,1,0,0,0,0,0,0,0,0,0,0,0,x1,0,0,0,3,3,x1,3,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,x114,3,x1,0,0,0,0,0,0,0,0,1,1,0,0,1,3,1,x2,1,3,1,0,0,0,3,0,0,0,0,0,0,0,0,3,3,x116,3,3,1,0,0,1,1,3,0,0,0,1,3,1,x4,1,3,x1,0,0,0,3,3,1,1,1,1,3,3,x118,1,x1,3,3,3,3,x2,0,0,1,3,1,x7,3,x1,0,0,x1,1,x1,3,3,x129,3,x1,3,x11,3,3,x2917,'


    fill_rect(0, 0, w, h, dominant_color)
    tokens = rle_data.split(',')
    p = 0
    
    for token in tokens:
        if not token:  # Skip empty tokens
            continue
        if token.startswith('x'):
            skip_count = int(token[1:])
            p += skip_count  # Skip pixels (already filled with dominant color)
        else:
            color_index = int(token, 16)
            x = p % w
            y = p // w
            set_pixel(x, y, colors[color_index])
            p += 1
    draw_string("UNITED FOREVER IN FREINDSHIP AND",0,0)
    draw_string("LABOUR",120,15)





#------------------------------------------------------------------------------------------------------------------#
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX#
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX#
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX#
#------------------------------------------------------------------------------------------------------------------#


def draw_vodj():
 i=0
 for y in range(h):
  for x in range(w):
   c=int(data[i],16)
   set_pixel(x,y,colors[c])
   i+=1

def draw_crosshair(pos_x,pos_y,collision,enposx,enposy):
    if collision == True:
       fill_rect(enposx,enposy,30,30,"blue")
    fill_rect(pos_x,pos_y,3,38,"red")
    fill_rect(pos_x,pos_y,38,3,"red")
    fill_rect(pos_x+35,pos_y,3,38,"red")
    fill_rect(pos_x,pos_y+35,38,3,"red")
    fill_rect(pos_x+17,pos_y+17,6,6,"red")


def ennemy_classes():
  x_pos_ennemy = random.randint(110,280)
  y_pos_ennemy = random.randint(0,180)
  fill_rect(x_pos_ennemy,y_pos_ennemy,30,30,"blue")
  return [x_pos_ennemy,y_pos_ennemy]


def gameloop():
    timer = 0
    pos_x=160
    pos_y = 120
    draw_vodj()
    ennemy_pos = ennemy_classes()
    points = 55
    draw_string(f"points:{points}", 10, 160)
    draw_string("0",70,180)
    while True:
        draw_string(f"points:{points}", 10, 160)
        if (pos_x + 30 > ennemy_pos[0] and
    pos_x < ennemy_pos[0] + 30 and pos_y + 30 > ennemy_pos[1] and pos_y < ennemy_pos[1] + 30):
            collision = True
        else:
           collision = False


        if ion.keydown(ion.KEY_LEFT):
            if not pos_x-5 < 110:
                fill_rect(pos_x,pos_y,40,40,"white")
                pos_x -= 5
                draw_crosshair(pos_x,pos_y,collision,ennemy_pos[0],ennemy_pos[1])
        if ion.keydown(ion.KEY_RIGHT):
            if not pos_x+5 > 280:
                fill_rect(pos_x,pos_y,40,40,"white")
                pos_x += 5
                draw_crosshair(pos_x,pos_y,collision,ennemy_pos[0],ennemy_pos[1])
        if ion.keydown(ion.KEY_DOWN):
            if not pos_y+5 > 180:
                fill_rect(pos_x,pos_y,40,40,"white")
                pos_y += 5
                draw_crosshair(pos_x,pos_y,collision,ennemy_pos[0],ennemy_pos[1])
        if ion.keydown(ion.KEY_UP):
            if not pos_y-5 < 0:
                fill_rect(pos_x,pos_y,40,40,"white")
                pos_y -= 5
                draw_crosshair(pos_x,pos_y,collision,ennemy_pos[0],ennemy_pos[1])

        if ion.keydown(ion.KEY_FIVE):
          if collision == True:
            time.sleep(0.1)
            points += 1
            print(points)
            draw_string(str(points),70,180)
            fill_rect(ennemy_pos[0],ennemy_pos[1],30,30,"white")
            draw_crosshair(pos_x,pos_y,False,
            ennemy_pos[0],ennemy_pos[1])
            ennemy_pos = ennemy_classes()
        time.sleep(0.05)
        timer +=0.05
        if timer > 4:
           print(890)
           fill_rect(0,0,330,250,"white")
           draw_flag(points)
           if points<11:
              draw_string('You go to Gulag',20,180)
           elif points<21 and points > 10:
                draw_string("You earn bread", 10, 180)
           elif points<31 and points > 20:
                draw_string("You earn photograph of car", 10, 180)
           elif points<41 and points > 30:
                draw_string("You earn car", 10, 180)
           else:
                draw_string("You get House", 10, 180)
                draw_string("Property is theft, go to gulag", 0, 200)

           break
        draw_string(f"TIME : {round(timer)}",10,175)
          



          




gameloop()

